{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://json-schema.boschrexroth.com/ctrlx-automation/ctrlx-core/apps/package-manifest/package-manifest.v1.schema.json",
  "type": "object",
  "title": "ctrlX CORE Package Manifest",
  "additionalProperties": false,
  "properties": {
    "$schema": {
      "type": "string",
      "title": "Definition of schema",
      "description": "Definition of schema, should point to a valid package-manifest schema definition, e.g.: https://json-schema.boschrexroth.com/ctrlx-automation/ctrlx-core/apps/package-manifest/package-manifest.v1.schema.json",
      "default": "https://json-schema.boschrexroth.com/ctrlx-automation/ctrlx-core/apps/package-manifest/package-manifest.v1.schema.json"
    },
    "version": {
      "type": "string",
      "title": "Package manifest version",
      "description": "Version of the package manifest.",
      "examples": [
        "1.0.0",
        "2.1.0",
        "1.2.10"
      ],
      "pattern": "^(\\d+\\.)(\\d+\\.)(\\d+)$"
    },
    "id": {
      "type": "string",
      "title": "Identifier of the package",
      "description": "Unique identifier of the package. Must match the following RegEx: ^[0-9a-ZA-Z]. Must match the identifier defined in the snapcraft.yaml.",
      "examples": [
        "rexroth-solutions",
        "rexroth-automation",
        "rexroth-vpnmanager",
        "ctrlx-node-red"
      ]
    },
    "required": {
      "type": "boolean",
      "title": "App is required app for system and not removable",
      "description": "Required marks an app as non-removable. This app isn't a system app by default but required for the functionality",
      "examples": [
        true,
        false
      ],
      "default": false
    },
    "scopes-declaration": {
      "$ref": "#/definitions/scopes-declaration"
    },
    "services": {
      "$ref": "#/definitions/services"
    },
    "menus": {
      "$ref": "#/definitions/menus"
    },
    "commands": {
      "$ref": "#/definitions/commands"
    },
    "documentation": {
      "$ref": "#/definitions/documentation"
    },
    "configuration": {
      "$ref": "#/definitions/configuration"
    },
    "certificatestores": {
      "type": "array",
      "title": "List of certificate stores",
      "description": "Certficate stores of your application",
      "items": {
        "$ref": "#/definitions/certificateStore"
      }
    },
    "apps": {
      "$ref": "#/definitions/apps"
    }
  },
  "definitions": {
    "services": {
      "type": "object",
      "additionalProperties": false,
      "title": "Services",
      "description": "Services contains a set of services a package is providing",
      "properties": {
        "proxyMapping": {
          "type": "array",
          "title": "Proxy mappings",
          "description": "Proxy mappings are used by the reverse proxy to assign specific routes to a server running on a device.",
          "items": {
            "$ref": "#/definitions/proxyMapping"
          }
        }
      }
    },
    "scopes-declaration": {
      "type": "array",
      "title": "Scopes provided by the package",
      "description": "Scopes used in the application to control access to specific ressources. The scope declaration is used by the identity management (IDM) to assign permissions for specific users or groups.",
      "items": {
        "$ref": "#/definitions/setOfScopes"
      }
    },
    "menus": {
      "type": "object",
      "additionalProperties": false,
      "title": "Menus",
      "description": "Menus and links a package provides. The declarations will be used by the device admin to generate the corresponding entries in the sidebar or overview.",
      "properties": {
        "sidebar": {
          "type": "array",
          "title": "Sidebar Menu",
          "items": {
            "$ref": "#/definitions/entries"
          }
        },
        "settings": {
          "type": "array",
          "title": "Settings Menu",
          "items": {
            "$ref": "#/definitions/entries"
          }
        },
        "overview": {
          "type": "array",
          "title": "Overview",
          "items": {
            "$ref": "#/definitions/entries"
          }
        }
      }
    },
    "entries": {
      "description": "A navigation entry point of the package",
      "type": "object",
      "additionalProperties": false,
      "title": "Link",
      "oneOf": [
        {
          "required": [
            "id",
            "title",
            "link"
          ]
        },
        {
          "required": [
            "id",
            "title",
            "items"
          ]
        }
      ],
      "properties": {
        "items": {
          "type": "array",
          "title": "Sublinks",
          "description": "Sub entries of the entry point",
          "items": {
            "$ref": "#/definitions/entries"
          }
        },
        "link": {
          "type": "string",
          "title": "Link to the ressource. The link includes the prefix of the service",
          "description": "Relative path of the link",
          "examples": [
            "/my-app",
            "/my-app?access_token=${bearertoken}",
            "http://${hostname}:1234/",
            "https://www.google.com/"
          ]
        },
        "target": {
          "type": "string",
          "title": "Target",
          "description": "Specifies where to show the link. Identical to the target property of an anchor element.",
          "examples": [
            "_blank",
            "my-app"
          ]
        },
        "id": {
          "description": "Identifier of the link. Used to define menu orders.",
          "type": "string",
          "title": "Id",
          "examples": [
            "my-app"
          ]
        },
        "title": {
          "description": "The text representation of the entry point",
          "type": "string",
          "title": "Title",
          "examples": [
            "My App"
          ]
        },
        "icon": {
          "description": "An optional icon, see... to represent the entry point",
          "type": "string",
          "title": "Icon",
          "examples": [
            "bosch-ic-automation"
          ]
        },
        "permissions": {
          "description": "An optional list of permissions to enable the entry point",
          "type": "array",
          "title": "Permissions",
          "items": {
            "type": "string",
            "title": "Permission",
            "examples": [
              "my-app.r",
              "my-app.rw",
              "my-app.cool-feature.r",
              "my-app.cool-feature.rw"
            ],
            "pattern": "^(.*)$"
          }
        }
      }
    },
    "commands": {
      "type": "object",
      "title": "Commands",
      "description": "Allows to specify commands that integrate into framework operations, e.g. for activeConfiguration. The sub-elements define the scopes that support command integration.",
      "properties": {},
      "additionalProperties": {
        "$ref": "#/definitions/commandScope"
      }
    },
    "commandScope": {
      "title": "Command Scope",
      "description": "A command scope containing multiple commands.",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/command"
      }
    },
    "command": {
      "title": "Command",
      "description": "A command that is provided and can be executed by another application. A command can have multiple command requests, e.g. to execute the command on multiple services.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/commandRequest"
      }
    },
    "commandRequest": {
      "title": "Command",
      "description": "A command object.",
      "type": "object",
      "required": [
        "id",
        "subject"
      ],
      "properties": {
        "id": {
          "title": "Id",
          "description": "The identifier of this command; must be unique within the enclosing scope.",
          "type": "string",
          "examples": [
            "motion"
          ]
        },
        "subject": {
          "title": "Subject",
          "description": "Denotes what will be saved or loaded; used to inform users, e.g. in messages like 'Loading motion settings' or 'Cannot load motion settings'",
          "type": "string",
          "examples": [
            "motion settings"
          ]
        },
        "url": {
          "title": "URL",
          "description": "The request URL. Called as a POST request. URLs starting with a slash are interpreted to be relative to https://<host>. The execution and url elements are mutually exclusive, that is exactly one of them is required.",
          "type": "string",
          "examples": [
            "/automation/api/v1/motion/cfg/save"
          ]
        },
        "execution": {
          "title": "Execution",
          "description": "The execution element is deprecated. Use url element instead.",
          "type": "object",
          "additionalProperties": false,
          "required": [
            "url"
          ],
          "properties": {
            "method": {
              "title": "HTTP method",
              "description": "The HTTP method called for executing this command; one of 'POST' and 'PUT'; the default is 'POST'.",
              "type": "string",
              "enum": [
                "PUT",
                "POST"
              ],
              "examples": [
                "POST"
              ],
              "default": "POST"
            },
            "url": {
              "title": "URL",
              "description": "The URL used for executing this command",
              "type": "string",
              "examples": [
                "/automation/api/v1/motion/cfg/save"
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    "setOfScopes": {
      "type": "object",
      "additionalProperties": false,
      "title": "Set of scopes",
      "description": "A set of scopes declares the scopes which are supported by the web service. The set includes identifer, name, a human-readable description and one or more scopes.",
      "properties": {
        "identifier": {
          "type": "string",
          "title": "The identifier of the scope set",
          "description": "The unique identifier of the permission set. Must be derived from the identifier and must not contain spaces. Must be unique.",
          "examples": [
            "my-app.web"
          ]
        },
        "name": {
          "type": "string",
          "title": "The name of the scope set",
          "description": "The name of the scope set. Should be unique. Used by the identity management frontend to display the scope set.",
          "examples": [
            "My App Scopes"
          ]
        },
        "description": {
          "type": "string",
          "title": "Description of the scope set",
          "description": "The description of the scope set. Used by the identity management frontend to describe the scope set."
        },
        "scopes": {
          "type": "array",
          "title": "Array of scopes",
          "description": "Array of scopes. Each scope describes a specific permission for one or more web server resources, e.g. write to a resource using HTTP PUT",
          "items": {
            "$ref": "#/definitions/scope"
          }
        }
      }
    },
    "scope": {
      "type": "object",
      "additionalProperties": false,
      "title": "Web server scope",
      "description": "A scope represents a web service resource specific permission and consists of an identifier, a name and a human-readable description.",
      "properties": {
        "identifier": {
          "type": "string",
          "title": "The identifier of the scope",
          "description": "The unique identifier of the scope. Must be derived from the id and follow the schema <id>.<service>.<scope_name>.<access_type>",
          "examples": [
            "my-app.cool-feature.rw (allow read/write access to all resources",
            "my-app.cool-feature.r (allow access to all resources on a read-only basis)"
          ]
        },
        "name": {
          "type": "string",
          "title": "The name of the scope",
          "description": "The name of the scope set. Should be unique. Used by the identity management frontend to display the scope. Should describe the what the permission means.",
          "examples": [
            "Read/write access (all parameters)",
            "Read access (all parameters)",
            "Read access (motion parameters)"
          ]
        },
        "description": {
          "type": "string",
          "title": "Description of the scope",
          "description": "The description of the scope. Used by the identity management frontend to describe the scope set.",
          "examples": [
            "This permissions allows to read and modify all automation parameters",
            "This permissions allows to read all automation parameters",
            "This permissions allows to read all motion parameters"
          ]
        }
      }
    },
    "proxyMapping": {
      "type": "object",
      "additionalProperties": false,
      "title": "ProxyMapping",
      "description": "ProxyMapping defines a web service mappings. A service has a name for identification, a relative path where it should be reachable and a socket (network or unix) to bind to",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name",
          "description": "A Name for the mapping",
          "examples": [
            "my-app.web"
          ]
        },
        "url": {
          "type": "string",
          "title": "Url",
          "description": "Relative path the service is requesting",
          "examples": [
            "/my-app"
          ]
        },
        "binding": {
          "type": "string",
          "title": "Binding",
          "description": "A network socket, e.g. :5000 or unix socket e.g. unix://{$SNAP_DATA}/package-run/my-app.web.sock",
          "examples": [
            ":5000",
            "http://localhost:5000",
            "unix://{$SNAP_DATA}/package-run/my-app.web.sock"
          ]
        },
        "options": {
          "type": "array",
          "title": "Additional options",
          "description": "Additional options of the proxy configuration",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "option": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            }
          },
          "examples": [
            {
              "option": "websocket",
              "value": ""
            },
            {
              "option": "max_conns",
              "value": "2"
            }
          ]
        },
        "restricted": {
          "type": "array",
          "title": "Restricted resources",
          "description": "Resources, to which the access shall be restricted, e.g. API URLs",
          "items": {
            "type": "string",
            "examples": [
              "/my-app/api/v1.0",
              "/my-app/api/v1.0"
            ]
          }
        }
      }
    },
    "documentation": {
      "type": "array",
      "title": "Documentation",
      "description": "Contains documents like API references, e.g.",
      "items": {
        "$ref": "#/definitions/document"
      }
    },
    "document": {
      "type": "object",
      "additionalProperties": false,
      "title": "Document",
      "description": "Specifies a reference to a document",
      "properties": {
        "type": {
          "type": "string",
          "title": "Type of the document",
          "description": "Type of the document. Can be used for assignment purposes, e.g.",
          "enum": [
            "api"
          ],
          "examples": [
            "api"
          ]
        },
        "name": {
          "type": "string",
          "title": "Name of the document",
          "description": "Name or title of the document. Can be used in headlines, e.g.",
          "examples": [
            "My-App API"
          ]
        },
        "url": {
          "type": "string",
          "title": "URL of the document",
          "description": "Specifies the path to the document resource.",
          "examples": [
            "/my-app/doc/api"
          ]
        },
        "description": {
          "type": "string",
          "title": "Description of the document",
          "description": "Short description of the content of the document.",
          "examples": [
            "Provides my-app related functionalities on ctrlX devices."
          ]
        }
      }
    },
    "configuration": {
      "type": "object",
      "additionalProperties": false,
      "description": "Configuration topics",
      "properties": {
        "appDirectories": {
          "type": "array",
          "description": "Describes app directories and specifies access to them inside the configuration",
          "items": {
            "$ref": "#/definitions/appDirectory"
          }
        },
        "appPrivateFiles": {
          "type": "array",
          "description": "Defines files which are ignored on saving and loading. The files are matched case-insensitively using regular expressions. Since XCR-V-0112.",
          "items": {
            "type": "string",
            "title": "Regular expression",
            "description": "A regular expression following the RE2 syntax (https://golang.org/s/re2syntax)",
            "examples": [
              "^my-app/[^/]+\\.bak$",
              "^my-app/tmp/",
              "^my-app/tmp"
            ]
          }
        }
      }
    },
    "appDirectory": {
      "type": "object",
      "additionalProperties": false,
      "title": "App directory",
      "description": "Describes an app configuration directory stored as part of a configuration.",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "title": "Path of the app directory in the configuration",
          "description": "Path of the app directory. Subdirectories are separated with /, no leading or trailing /",
          "examples": [
            "my-app",
            "my-app/cool-feature"
          ]
        },
        "description": {
          "type": "string",
          "title": "Title",
          "description": "Short description of the content of the directory. Will be displayed as part of a configuration.",
          "examples": [
            "My app",
            "My cool feature"
          ]
        },
        "icon": {
          "type": "string",
          "title": "Icon",
          "description": "An optional icon which represents the app.",
          "examples": [
            "my-icon"
          ]
        },
        "copyOnLoad": {
          "type": "boolean",
          "title": "Copy on load",
          "description": "An app is responsible for persisting its configuration state to the app data folder, even for the load command. With copyOnLoad, the app is able to delegate this task to the Solutions app.",
          "examples": [
            true,
            false
          ],
          "default": false
        },
        "writeProtected": {
          "type": "boolean",
          "title": "Write-protection of app directories",
          "description": "An app can protect its directories in the active configuration against write-access, e.g. via WebDAV. Since XCR-V-0112.",
          "examples": [
            true,
            false
          ],
          "default": false
        }
      }
    },
    "certificateStore": {
      "type": "object",
      "title": "Store for Certificates and Keys",
      "description": "certificate store enables your application to manage certificates and keys using Device Admin",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "title": "Id of your store",
          "description": "Id of your store, should contain snap name as prefix, e.g. ctrlx-helloworld.certificates",
          "example": "ctrlx-helloworld.certificates"
        },
        "title": {
          "type": "string",
          "title": "Title of certificate store",
          "description": "Title of your certificate store that is displayed in ctrlX Device Admin UI",
          "example": "Hello World"
        },
        "description": {
          "type": "string",
          "title": "Description of your certificate store",
          "description": "Describes the content and usage of the certificates in the store",
          "example": "Certficates & Keys to connect to the World"
        }
      }
    },
    "apps": {
      "type": "object",
      "title": "Configurations for specific rexroth apps",
      "description": "Contains configurations for specific rexroth apps",
      "additionalProperties": false,
      "properties": {
        "rexroth-remoteagent": {
          "$ref": "#/definitions/rexroth-remoteagent"
        }
      }
    },
    "rexroth-remoteagent": {
      "type": "object",
      "title": "Commands for remote device administration",
      "description": "Contains allowed commands for remote device administration",
      "additionalProperties": false,
      "properties": {
        "commands": {
          "type": "array",
          "title": "Remote device administration commands",
          "description": "Remote device administration commands are used to execute commands on the device from the Nexeed Device Portal",
          "items": {
            "type": "string"
          },
          "examples": [
            [
              "BACKUP",
              "RESTORE",
              "REBOOT"
            ]
          ]
        }
      }
    }
  }
}
